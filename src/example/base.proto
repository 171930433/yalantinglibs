syntax = "proto3";
package zhito.inner_class;

import "proto_to_struct.proto";
option(write_eigen_helper) = true;

message Vector4f
{
    option(eigen_typename) = "Eigen::Vector4f";

     float x = 1;
     float y = 2;
     float z = 3;
     float w = 4;
}

message Vector4d
{
    option(eigen_typename) = "Eigen::Vector4d";

     double x = 1;
     double y = 2;
     double z = 3;
     double w = 4;
}

message Vector3d
{
    option(eigen_typename) = "Eigen::Vector3d";

     double x = 1;
     double y = 2;
     double z = 3;
}

message Vector2d
{
    option(eigen_typename) = "Eigen::Vector2d";

     double x = 1;
     double y = 2;
}

message Quaterniond {
    option(eigen_typename) = "Eigen::Quaterniond";

     double w = 1;
     double x = 2;
     double y = 3;
     double z = 4;
}

message Quaternionf {
     option(eigen_typename) = "Eigen::Quaternionf";
 
      float w = 1;
      float x = 2;
      float y = 3;
      float z = 4;
 }

message PointLLH {
     double lon = 1;
     double lat = 2;
     double height = 3;
}

// hard code, never edit
message MatrixXd
{
    option(eigen_typename) = "Eigen::MatrixXd";

    repeated double data = 1;
    int32 col = 2;
    int32 row = 3;
}
message PointENU {
     double x = 1 ;  
     double y = 2 ;  
     double z = 3 ;  
}               
